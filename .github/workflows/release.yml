# Create a GitHub upstream release with Debian packages for amd64 and arm64
name: release
on:
  push:
    tags:
      # this is a glob, not a regexp
      - '[0-9]*'
      - 'v[0-9]*'
jobs:
  source:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cockpit-project/tasks:latest
      options: --user root
    permissions:
      # create GitHub release
      contents: write
    outputs:
      tarball: ${{ steps.build.outputs.tarball }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://github.blog/2022-04-12-git-security-vulnerability-announced/
      - name: Pacify git's permission check
        run: |
          git config --global --add safe.directory /__w/
          git config --global --add safe.directory /__w/cockpit-birdnet-go/cockpit-birdnet-go
          git config --global --add safe.directory $(pwd)

      - name: Workaround for https://github.com/actions/checkout/pull/697
        run: |
          TAG_NAME=$(git describe --tags 2>/dev/null || echo "v1.0.0")
          echo "Tag name: $TAG_NAME"
          git fetch --force origin $TAG_NAME:refs/tags/$TAG_NAME || true

      - name: Build release tarball
        id: build
        run: |
          make dist
          TARBALL=$(ls *.tar.xz)
          echo "tarball=$TARBALL" >> $GITHUB_OUTPUT
          echo "Built tarball: $TARBALL"

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-tarball
          path: "*.tar.xz"
          retention-days: 30

  debian-amd64:
    runs-on: ubuntu-latest
    needs: source
    permissions:
      contents: write
    steps:
      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: source-tarball
          path: .

      - name: Extract and prepare source
        run: |
          tar -xf *.tar.xz
          cd cockpit-birdnet-go-*/
          # Copy debian packaging files
          cp -r packaging/debian ./
          # Process changelog template with version
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          sed "s/%{VERSION}/${VERSION}-1/g" debian/changelog > debian/changelog.tmp && mv debian/changelog.tmp debian/changelog

      - name: Build Debian package (amd64)
        run: |
          cd cockpit-birdnet-go-*/
          
          # Install build dependencies
          apt-get update
          apt-get install -y debhelper nodejs npm make gettext libappstream-glib8 dh-make devscripts build-essential
          
          # Set up environment
          export DEBEMAIL="tomi.hakala@pobox.fi"
          export DEBFULLNAME="Tomi Hakala"
          
          # Build the package
          dpkg-buildpackage -us -uc -b

      - name: Upload Debian package (amd64)
        uses: actions/upload-artifact@v4
        with:
          name: debian-amd64
          path: "*.deb"
          retention-days: 30

  debian-arm64:
    runs-on: ubuntu-latest
    needs: source
    permissions:
      contents: write
    steps:
      - name: Set up QEMU for multi-arch
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: source-tarball
          path: .

      - name: Extract and prepare source
        run: |
          tar -xf *.tar.xz
          cd cockpit-birdnet-go-*/
          # Copy debian packaging files
          cp -r packaging/debian ./
          # Process changelog template with version
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          sed "s/%{VERSION}/${VERSION}-1/g" debian/changelog > debian/changelog.tmp && mv debian/changelog.tmp debian/changelog

      - name: Build Debian package (arm64) in Docker
        run: |
          cd cockpit-birdnet-go-*/
          
          # Create a Dockerfile for ARM64 build
          cat > Dockerfile.arm64 << 'EOF'
          FROM --platform=linux/arm64 ubuntu:22.04
          
          # Install build dependencies
          RUN apt-get update && apt-get install -y \
              debhelper \
              nodejs \
              npm \
              make \
              gettext \
              libappstream-glib8 \
              dh-make \
              devscripts \
              build-essential \
              && rm -rf /var/lib/apt/lists/*
          
          WORKDIR /build
          COPY . .
          
          # Set up environment
          ENV DEBEMAIL="tomi.hakala@pobox.fi"
          ENV DEBFULLNAME="Tomi Hakala"
          
          # Build the package
          RUN dpkg-buildpackage -us -uc -b
          EOF
          
          # Build using Docker with ARM64 emulation
          docker buildx build --platform linux/arm64 -f Dockerfile.arm64 -t cockpit-birdnet-go-builder-arm64 .
          
          # Extract the built package
          docker run --rm --platform linux/arm64 -v "$(pwd)/..":/output cockpit-birdnet-go-builder-arm64 sh -c "cp /*.deb /output/"

      - name: Upload Debian package (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: debian-arm64
          path: "*.deb"
          retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: [source, debian-amd64, debian-arm64]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: find artifacts -type f

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/source-tarball/*.tar.xz
            artifacts/debian-amd64/*.deb
            artifacts/debian-arm64/*.deb
          name: "Release ${{ github.ref_name }}"
          body: |
            ## BirdNET-Go Cockpit Plugin Release ${{ github.ref_name }}
            
            This release includes:
            
            ### Source Distribution
            - `cockpit-birdnet-go-*.tar.xz` - Source tarball for building from source
            
            ### Debian Packages
            - `cockpit-birdnet-go_*_all.deb` - Debian package for amd64 (Intel/AMD processors)
            - `cockpit-birdnet-go_*_all.deb` - Debian package for arm64 (Raspberry Pi 4/5, Apple Silicon)
            
            ### Installation
            
            **For Debian/Ubuntu (amd64):**
            ```bash
            wget https://github.com/tphakala/cockpit-birdnet-go/releases/download/${{ github.ref_name }}/cockpit-birdnet-go_*_all.deb
            sudo apt install ./cockpit-birdnet-go_*_all.deb
            ```
            
            **For Raspberry Pi (arm64):**
            ```bash
            wget https://github.com/tphakala/cockpit-birdnet-go/releases/download/${{ github.ref_name }}/cockpit-birdnet-go_*_all.deb
            sudo apt install ./cockpit-birdnet-go_*_all.deb
            ```
            
            **Requirements:**
            - Cockpit web interface installed (`sudo apt install cockpit`)
            - Docker or docker.io package for container management
            
            After installation, access the BirdNET-Go management interface through Cockpit at `https://your-server:9090`
          draft: false
          prerelease: false
