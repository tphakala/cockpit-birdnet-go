# Create a GitHub upstream release with universal Debian package
name: release
on:
  push:
    tags:
      # this is a glob, not a regexp
      - '[0-9]*'
      - 'v[0-9]*'
jobs:
  source:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cockpit-project/tasks:latest
      options: --user root
    permissions:
      # create GitHub release
      contents: write
    outputs:
      tarball: ${{ steps.build.outputs.tarball }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # https://github.blog/2022-04-12-git-security-vulnerability-announced/
      - name: Pacify git's permission check
        run: |
          git config --global --add safe.directory /__w/
          git config --global --add safe.directory /__w/cockpit-birdnet-go/cockpit-birdnet-go
          git config --global --add safe.directory $(pwd)

      - name: Workaround for https://github.com/actions/checkout/pull/697
        run: |
          TAG_NAME=$(git describe --tags 2>/dev/null || echo "v1.0.0")
          echo "Tag name: $TAG_NAME"
          git fetch --force origin $TAG_NAME:refs/tags/$TAG_NAME || true

      - name: Build release tarball
        id: build
        run: |
          echo "=== Checking git status ==="
          git status --porcelain
          
          echo "=== Listing packaging files ==="
          find packaging/ -type f | head -20
          
          echo "=== Building tarball with make dist ==="
          make dist
          
          echo "=== Listing built files ==="
          ls -la *.tar.xz
          
          TARBALL=$(ls *.tar.xz)
          echo "tarball=$TARBALL" >> $GITHUB_OUTPUT
          echo "Built tarball: $TARBALL"
          
          echo "=== Checking tarball contents ==="
          tar -tzf $TARBALL | grep -E "(packaging|debian)" | head -20 || echo "No packaging/debian files found in tarball"

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-tarball
          path: "*.tar.xz"
          retention-days: 30

  debian:
    runs-on: ubuntu-latest
    needs: source
    permissions:
      contents: write
    steps:
      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: source-tarball
          path: .

      - name: Extract and prepare source
        run: |
          echo "=== Listing downloaded files ==="
          ls -la *.tar.xz
          
          echo "=== Extracting tarball ==="
          tar -xf *.tar.xz
          
          echo "=== Listing extracted directories ==="
          ls -la cockpit-birdnet-go-*/
          
          cd cockpit-birdnet-go-*/
          
          echo "=== Current directory contents ==="
          ls -la
          
          echo "=== Checking packaging directory ==="
          ls -la packaging/
          ls -la packaging/debian/ || echo "debian directory not found"
          
          # Copy debian packaging files
          if [ -d packaging/debian ]; then
            cp -r packaging/debian ./
            echo "=== Copied debian directory contents ==="
            ls -la debian/
          else
            echo "ERROR: packaging/debian directory not found in tarball"
            exit 1
          fi
          
          # Process changelog template with version
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          echo "=== Processing version: $VERSION ==="
          
          if [ -f debian/changelog ]; then
            echo "=== Original changelog ==="
            cat debian/changelog
            sed "s/%{VERSION}/${VERSION}-1/g" debian/changelog > debian/changelog.tmp && mv debian/changelog.tmp debian/changelog
            echo "=== Processed changelog ==="
            cat debian/changelog
          else
            echo "ERROR: debian/changelog not found"
            exit 1
          fi

      - name: Build universal Debian package
        run: |
          cd cockpit-birdnet-go-*/
          
          # Install build dependencies
          sudo apt-get update
          sudo apt-get install -y debhelper nodejs npm make gettext libappstream-glib8 dh-make devscripts build-essential
          
          # Set up environment
          export DEBEMAIL="tphakala@users.noreply.github.com"
          export DEBFULLNAME="Tomi Hakala"
          
          echo "=== Building universal package (works on all architectures) ==="
          # This is a JavaScript/web interface - architecture-independent
          # Single package works on Intel, AMD, Raspberry Pi, and all other architectures
          dpkg-buildpackage -us -uc -b
          
          echo "=== Built packages ==="
          ls -la ../*.deb

      - name: Copy built package for upload
        run: |
          cp cockpit-birdnet-go-*/*.deb . 2>/dev/null || cp *.deb . 2>/dev/null || echo "Package built in parent directory"
          ls -la *.deb

      - name: Upload universal Debian package
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: "*.deb"
          retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: [source, debian]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: find artifacts -type f

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/source-tarball/*.tar.xz
            artifacts/debian-package/*.deb
          name: "Release ${{ github.ref_name }}"
          body: |
            ## BirdNET-Go Cockpit Plugin Release ${{ github.ref_name }}
            
            This release includes:
            
            ### Source Distribution
            - `cockpit-birdnet-go-*.tar.xz` - Source tarball for building from source
            
            ### Debian Package
            - `cockpit-birdnet-go_*_all.deb` - Architecture-independent package (works on all architectures)
            
            This package works on all architectures including:
            - Intel/AMD processors (x86_64/amd64)
            - Raspberry Pi 4/5 (ARM64/aarch64)
            - Other ARM processors
            
            ### Installation
            
            **For any Debian/Ubuntu system (Intel, AMD, Raspberry Pi, etc.):**
            ```bash
            wget https://github.com/tphakala/cockpit-birdnet-go/releases/download/${{ github.ref_name }}/cockpit-birdnet-go_*_all.deb
            sudo apt install ./cockpit-birdnet-go_*_all.deb
            ```
            
            **Requirements:**
            - Cockpit web interface installed (`sudo apt install cockpit`)
            - Docker or docker.io package for container management
            
            After installation, access the BirdNET-Go management interface through Cockpit at `https://your-server:9090`
          draft: false
          prerelease: false
